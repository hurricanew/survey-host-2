// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  role      UserRole @default(USER)
  googleId  String?  @unique
  picture   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations for future stories
  surveys   Survey[]

  @@map("users")
}

model Survey {
  id          String   @id @default(cuid())
  userId      String
  title       String
  description String?
  slug        String   @unique
  content     String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user      User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  responses SurveyResponse[]

  @@map("surveys")
}

model SurveyResponse {
  id           String   @id @default(cuid())
  surveyId     String
  fingerprintId String?
  responses    Json
  submittedAt  DateTime @default(now())

  // Relations
  survey Survey @relation(fields: [surveyId], references: [id], onDelete: Cascade)

  @@map("survey_responses")
}

enum UserRole {
  USER
  ADMIN
}
